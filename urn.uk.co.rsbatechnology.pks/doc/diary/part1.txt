= Part 1: Requirements=

Being well-versed in requirements engineering, I started by setting out the basic requirements for the PKS prototype application.  This page describes the business requirements that define our self-stated goals of the PKS NetKernel prototype application.  

I have used the Planguage requirements engineering language to express the PKS requirements.  For more details, please refer to Competitive Engineering by Tom Gilb and http://www.gilb.com.  

<blockquote>
Please note that these requirements are presented here only for the purposes of building the experimental PKS module in NetKernel: they are not intended to be a comprehensive requirements description of position keeping in investment banking.  Therefore, we are free to make arbitrary scope decisions, state assumptions, and generally define the problem to make the PKS module interesting and minimally useful, but not necessary useful in any actual real-world system!
</blockquote>

== Summary ==

The Position Keeping Server (PKS) application maintains multiple currency position records for a wider eFX platform.  It receives trades and transactions from other part of the system, which cause the PKS to generate updates to one or more separate currency positions. The PKS must then broadcast the changed positions back out to the rest of the system, where they are used for various purposes (e.g. pre-trade credit checking, storage in central reporting databases).  Its critical function is to calculate a time-ordered series of individual position value changes (called "position deltas"), which are included in the broadcast position messages.  

{svg}res:/doc/diary/PKSLogical.svg{/svg}

== 1. Currency Positions ==
''This section describes requirements for the identification, contents and storage of position records in the PKS application''

{| border="1"
|-
! Tag:
| F1.1 Currency Position
! Type:
| Function
|-
! Description:
| colspan="3" | A '''Currency Position''' is a uniquely-identified set of related '''Denominated Currency Amounts'''.  Each Currency Position is identified by a unique combination of:
# Business Area
# Location
# Lifecycle Type
# Position Type
# Owning Account
# Position Date
# Position Symbol

''The unique combination of position identifier values form a hierarchical namespace for currency positions.''
|}

{| border="1"
|-
! Tag:
| F1.2 Denominated Currency Amount
! Type:
| Function
|-
! Description:
| colspan="3" |
# A '''Denominated Currency Amount''' is a signed currency quantity rounded to <nearest> whole currency unit (ie. ignore pennies and cents), in a given denomination currency ''(or "symbol")''.
# A Currency Position may have multiple Denominated Currency Amounts associated with it, with different semantic meanings, for example:
## Symbol ''(currency amount denominated in the Position Symbol from the Position's identifier)''
## Base ''(equivalent Base Currency amount)''
|}

{| border="1"
|-
! Tag:
| F1.3 Position Storage
! Type:
| Function
|-
! Description:
| colspan="3" |
# The system shall provide mechanisms to store, update, retrieve and delete current, non-historical Currency Positions.  
# The system shall ensure that the current state of managed Currency Positions is retained and re-created in the event of the NetKernel application instance stopping (either expectedly at the start / end of a week or unexpectedly).  
|}

{| border="1"
|-
! Tag:
| P1.4 Position Capacity
! Type:
| Performance
|-
| Ambition:
| colspan="3" | Maintain future-dated positions generated by expected trading volumes over next 1 year
|-
! Scale:
| colspan="3" | The number of uniquely-identifiable Non-Historical Currency Positions that can be stored and retrieved by the System for a given <nowiki>[Business Area]</nowiki> and <nowiki>[Number of Amount Types]</nowiki>

; Non-Historical: :  Any Currency Position with a Position Date greater than or equal to the current Global Business Date
|-
! Goal:
| colspan="3" | <nowiki>[Business Area=EFX, Amount Types={symbol, base}, NK Prototype End May 2014]</nowiki>  20,000 
|}

== 2. Currency Position Maintenance ==

=== 2.1 General ===
{| border="1"
|-
! Tag:
| F2.1 Position Updating
! Type:
| Function
|-
! Description:
| colspan="3" |
The system shall receive '''Position-Originating Transactions''' provided by <some external system>, and use '''Position Builder Algorithms''' to calculate new Currency Positions or changes to existing Currency Positions.
|}

{| border="1"
|-
! Tag:
| F2.1.1 Update Audit Record
! Type:
| Function
|-
! Description:
| colspan="3" |
# The system shall calculate and record a time-ordered audit record of changes ''(known as "Position Deltas")'' to every Denominated Currency Amount within a Currency Position, such that it shall be possible to recreate the current Denominated Currency Amount values of a Position by re-applying all relevant historical Position Deltas in the correct sequence.
# Position Deltas must be recorded using the following accounting conventions:

## CREDIT: A positive (position-increasing) increase in a Currency Position Denominated Currency Amount value
## DEBIT: A negative (position- reducing) decrease in a Currency Position Denominated Currency Amount value
## SYNC: Positon value is being forced to a specific value ''(eg. as specified in external Position Posting transactions, for example flattening a position, or other manual adjustment)''

'' This is a critical function requirement for the PKS application, required by Trading Compliance'' 
|}

{| border="1"
|-
! Tag:
| F2.1.2 Position-Originating Transactions
! Type:
| Function
|-
! Description:
| colspan="3" |
The system shall be able to calculate Currency Position changes from the following trade and transaction types:

# FX Customer Spot Trade
# FX Customer Forward Outright Trade

|}

{| border="1"
|-
! Tag:
| F2.1.3 Transaction Throughput
! Type:
| Performance
|-
! Ambition:
| colspan="3" | Handle peak flow expected number of new transactions whilst not exceeding maximum time for publishing new position changes|
|-
! Scale:
| colspan="3" | <nowiki>The maximum number of new Position-Originating Transactions received and processed during a [Peak Flow Period] whilst not exceeding [Maximum Per-Position Change Publication Time]</nowiki>

; Per-Position Change Publication Time (MPPCPT): :  Time taken from receipt of a Position-Originating Transaction by the System to publication of all corresponding ''Position Updates'' '''(see Position Publication section)'''
|-
! Goal:
| colspan="3" | <nowiki>[Peak Flow Period=10 seconds, MPPCPT=10 ms, NK Prototype End May 2014]</nowiki>  100 
|}

===2.2 Position Building===
'' This section describes the required algorithms for calculating and maintaining positions in the system''

{| border="1"
|-
! Tag:
| F2.2 Position Building Algorithms
! Type:
| Function
|-
! Description:
| colspan="3" |
# The system shall enable multiple independent Position Building Algorithms to calculate position changes from each Position-Originating Transaction.  
# Each Position Building Algorithm may generate one or more position changes from each Position-Originating Transaction, or report an error if it was unable to determine the position changes for any reason
# The system shall apply all calculated position changes to the current maintained Currency Positions ''(known as "posting")'' unless any Position Builder Algorithms have reported any errors.  If one or more errors have been reported, no position changes must be made as a result of the Position - Originating Transaction.
|}

{| border="1"
|-
! Tag:
| F2.2.1 Open Settlement Position Building Algorithm
! Type:
| Function
|-
! Description:
| colspan="3" |
# The Open Settlement Position Building Algorithm maintains net (combination of credit and debit position changes in one value) currency open (ie. future-dated) settlement amounts separately for each settlement currency for each settlement date.
# For {FX Customer Spot Trade, FX Customer Forward Outright Trade} transactions, the system shall calculate two OPEN position changes:

Position Identifiers:
{| border="1"
! Business Area:
| from FX Trade "Business Area" attribute
|-
! Location:
| from FX Trade "Location" attribute
|-
! Lifecycle Type:
| from FX Trade "Lifecycle Type" attribute
|-
! Account:
| from FX Trade "CounterpartyID" UUID - based attribute
|-
! Position Type:
| "OPEN"
|-
! Position Symbol:
| Either:
* Base Currency of FX Trade (for 1st position)
* Term Currency of FX Trade (for 2nd position)
|-
! Position Date:
| Value Date (of FX Trade)
|}

Two Denominated Currency Amounts for 1st "base currency" position:
{| border="1"
! Amount Type:
| "SETTLEMENT"
|-
! Delta Action:
| Either:
* DEBIT, if FX Trade "customer buys base currency" flag is FALSE
* CREDIT, if FX Trade "customer buys base currency" flag is TRUE
|-
! Delta Amount:
| Base Currency Settlement Amount (from FX Trade), unsigned
|-
! Amount Type:
| "BASE" ''(refers to the Global Base Currency)
|-
! Delta Action:
| As for "SETTLEMENT" amount above
|-
! Delta Amount:
| Base Currency Settlement Amount (from FX Trade), converted to the Global Base Currency using <reference FX rates>, unsigned
|}

Two Denominated Currency Amounts for 2nd "term currency" position:
{| border="1"
! Amount Type:
| "SETTLEMENT"
|-
! Delta Action:
| Either:
* DEBIT, if FX Trade "customer buys base currency" flag is TRUE
* CREDIT, if FX Trade "customer buys base currency" flag is FALSE
|-
! Delta Amount:
| Term Currency Settlement Amount (from FX Trade), unsigned
|-
! Amount Type:
| "BASE" ''(refers to the Global Base Currency)
|-
! Delta Action:
| As for "SETTLEMENT" amount above
|-
! Delta Amount:
| Term Currency Settlement Amount (from FX Trade), converted to the Global Base Currency using <reference FX rates>, unsigned
|}

|}


== 3. Position Publication ==
{| border="1"
|-
! Tag:
| F3.1 Position Update Publication
! Type:
| Function
|-
! Description:
| colspan="3" |
The system shall publish a set of altered Currency Positions for every Position-Originating Transaction successfully processed.

The System shall publish:
# The identified Currency Position and its current Denomincated Currency Amounts
# The Position Delta record(s) that were applied to the previous position value
# Details of the position-originating transaction that triggered the position change:
## Transaction ID (from FX Trade)
## Delta Generation Time

''' RJS: How to simulate position publication in the NK prototype application?'''
|}


== 4. Glossary of Definitions ==
''This section defines domain-specific terms referenced in the main business requirements section.''

; Business Area : The top-level logical partition separating positions belonging to one organisation (or sub-organisation) from another.  ''Examples: "FI", 'EFX"''
; Business Date : Global business date on which a financial event occurs. By normal convention, a new global business date begins at 5pm EST (New York local)
; Global Base Currency : A common currency which the organisation converts other foreign currency amounts into for the purposes of aggregation and comparison.  ''Usually USD, but can vary depending on the organisation's geographic focus.''
; FX Customer Spot Trade : A single foreign exchange trade between the Bank and a Customer, with an agreed future value (settlement) date on the [[http://en.wikipedia.org/wiki/Foreign_exchange_date_conventions#Calculating_spot_dates | market-conventional spot date]]  for the currency pair
; FX Customer Forward Outright Trade : A single foreign exchange trade between the Bank and a Customer, with an agreed value (settlement) date on a future date other than the current market-conventional spot date for the currency pair.
; Location : The organisation location that owns the currency position. Equivalent to "Branch", "Office".  Can correspond to a particular books & records system instance that holds the system of record of a bank's trading positions. ''Examples: LDN, PAR, NYK''
; Lifecycle Type :  Indicates the lifecycle stage of the originating transaction of a position. As a transaction (e.g. a trade) moves through its lifecycle (pre-netting, pre-booking, post-booking), the corresponding positions get moved from one lifecycle type to the next.
; Owning Account : The entity to which the currency position nominally belongs.  Normally either a reference to an external counterparty or an internal legal entity (such as a trading book).  The Position Type determines what type of account can own such a position.
; Position Date : The Business Date on which the position is recognised in the books & records. The Position Type determines exactly what this date represents.  '' For example, a position type related to the settlement date of a trade will set the Position Date equal to the (future-dated) Value Date of the trade. ''
; Position Posting : an external, non-trade-related request to change the value of one or more Denominated Currency Amount in a given Currency Position. May specify DEBIT, CREDIT or SYNC change actions
; Position Symbol : The primary currency (or other) symbol associated with the position. '' Usually a 3-character ISO currency code such as GBP, EUR''
; Position Type : Indicates the semantic type of position, depending on the algorithmn used to create the given position.  This allows a single originating transaction to update multiple different positions using multiple calculation algorithms

